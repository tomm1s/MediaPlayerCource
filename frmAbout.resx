<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        80Vaa+2jSUQAAAAASUVORK5CYII=
</value>
  </data>
</root>